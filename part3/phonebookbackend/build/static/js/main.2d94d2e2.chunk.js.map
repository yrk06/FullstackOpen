{"version":3,"sources":["services/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseURL","person","Promise","resolve","reject","axios","post","then","res","data","catch","err","response","delete","get","put","id","Filter","filterName","setFilterName","value","onChange","event","target","NewPerson","newName","setNewName","newNumber","setNewNumber","submitNewPerson","onSubmit","type","Person","deletePerson","name","number","onClick","Persons","persons","map","Notification","message","undefined","error","className","success","App","useState","setPersons","ntfMessage","setNtfMessage","useEffect","PersonsOp","displayNotes","filter","el","toLowerCase","includes","preventDefault","length","window","confirm","obj","newP","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d94d2e2.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\n\r\nconst baseURL = '/api/persons'\r\n\r\nconst allPersons = () =>{\r\n    return axios\r\n    .get(baseURL)\r\n    .then(res => res.data)\r\n}\r\n\r\nconst addPerson = (person) =>{\r\n    return new Promise( (resolve,reject) => {\r\n    axios\r\n    .post(baseURL,person)\r\n    .then(res => resolve(res.data))\r\n    .catch(err => reject(err.response.data))\r\n    })\r\n}\r\n\r\nconst updatePerson = (person) =>{\r\n    return new Promise( (resolve,reject) => {\r\n    axios\r\n    .put(`${baseURL}/${person.id}`,person)\r\n    .then(res => resolve(res.data))\r\n    .catch(err => reject(err.response.data))\r\n    })\r\n}\r\n\r\nconst deletePerson = (person) => {\r\n    return axios\r\n    .delete(`${baseURL}/${person}`)\r\n    .then(res => res.data)\r\n}\r\n\r\nexport default {addPerson,deletePerson,allPersons,updatePerson}","const Filter = ({filterName, setFilterName}) => {\r\n    const onFilterNameChanged = (event) =>{\r\n      setFilterName(event.target.value)\r\n    }\r\n    return (\r\n    <div>\r\n        Filter by: <input value={filterName} onChange={onFilterNameChanged} />\r\n    </div>\r\n    )\r\n  }\r\n  \r\nconst NewPerson = ({newName,setNewName,newNumber, setNewNumber,submitNewPerson}) => {\r\n\r\n    const onNewNameChanged = (event) =>{\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const onNewNumberChanged = (event) =>{\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={submitNewPerson}>\r\n            <div>\r\n            name: <input value={newName} onChange={onNewNameChanged} />\r\n            </div> \r\n            <div>\r\n            number: <input value={newNumber} onChange={onNewNumberChanged} /></div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Person = ({person,deletePerson}) => {\r\n    return <li>{person.name} {person.number} <button onClick={() => deletePerson(person)}>Delete</button></li>\r\n}\r\n\r\nconst Persons = ({persons,deletePerson}) => {\r\nreturn (\r\n    <ul>\r\n    {persons.map(person => <Person key={person.name} person={person} deletePerson={deletePerson}/>)}\r\n    </ul>\r\n)\r\n}\r\n\r\nexport {Persons,Filter,NewPerson}","import './Notification.css'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    if (message.error !== undefined) {\r\n        return (\r\n            <div className='error'>\r\n              {message.error}\r\n            </div>\r\n          )\r\n    }\r\n    if (message.success !== undefined) {\r\n        return (\r\n            <div className='success'>\r\n              {message.success}\r\n            </div>\r\n          )\r\n    }\r\n    return null\r\n}\r\n\r\nexport default Notification","import { useState,useEffect} from 'react'\r\nimport PersonsOp from './services/Person'\r\nimport { Filter, NewPerson, Persons } from './components/Persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filterName, setFilterName] = useState('')\r\n\r\n  const [ntfMessage, setNtfMessage] = useState(null)\r\n\r\n  useEffect(()=>{\r\n    PersonsOp.allPersons()\r\n    .then(data => {\r\n      setPersons(data)\r\n    })\r\n  },[])\r\n\r\n  const submitNewPerson = (event) => {\r\n    event.preventDefault()\r\n    if(persons.filter( el => el.name.toLowerCase() === newName.toLowerCase()).length > 0){\r\n      \r\n      if(window.confirm(`${newName} is already on the book, replace the current number?`)){\r\n        const obj = {...persons.filter( el => el.name.toLowerCase() === newName.toLowerCase())[0]}\r\n        obj.number = newNumber\r\n        PersonsOp.updatePerson(obj)\r\n        .then(newP => {\r\n          setPersons(persons.map(el => el.id !== obj.id ? el : newP))\r\n          setNtfMessage({success: `${newP.name} was updated successfully`})\r\n        })\r\n        .catch((err)=> {\r\n          setNtfMessage(err)\r\n          //setPersons(persons.filter(el => el.id !== obj.id))\r\n        })\r\n      }\r\n    \r\n    } else {\r\n      PersonsOp.addPerson({name:newName,number:newNumber})\r\n      .then(newP => {\r\n        setPersons(persons.concat(newP)) \r\n        setNtfMessage({success: `${newP.name} was added successfully`})\r\n      })\r\n      .catch(err => {setNtfMessage(err)})\r\n    } \r\n  }\r\n\r\n  const deletePerson = (person)=>{\r\n    if(window.confirm(`Are you sure you want to delete ${person.name} from the book?`)){\r\n      PersonsOp.deletePerson(person.id).then(()=> {\r\n        setPersons(persons.filter(el => el.id !== person.id))\r\n        setNtfMessage({success: `${person.name} was deleted successfully`})\r\n      })\r\n    }\r\n  } \r\n\r\n  const displayNotes = persons.filter(el => el.name.toLowerCase().includes(filterName.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={ntfMessage}/>\r\n      <h2>Phonebook</h2>\r\n        <Filter filterName={filterName} setFilterName={setFilterName}/>\r\n      <h3>Add a new</h3>\r\n\r\n      <NewPerson \r\n        newName={newName} \r\n        setNewName={setNewName} \r\n        newNumber={newNumber}\r\n        setNewNumber={setNewNumber}\r\n        submitNewPerson={submitNewPerson}\r\n      />\r\n      \r\n      <h2>Numbers</h2>\r\n\r\n      <Persons persons={displayNotes} deletePerson={deletePerson}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}